"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(middleware)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n\nasync function middleware(request) {\n    let supabaseResponse = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n        request\n    });\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://nqbdotjtceuyftutjvsl.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5xYmRvdGp0Y2V1eWZ0dXRqdnNsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIyNTA5OTgsImV4cCI6MjA2NzgyNjk5OH0.8rC6czRE4ME8SVekZkbcS6oLafhQKIb2iO8Lgkr-LLc\", {\n        cookies: {\n            getAll () {\n                return request.cookies.getAll();\n            },\n            setAll (cookiesToSet) {\n                cookiesToSet.forEach(({ name, value, options })=>request.cookies.set(name, value));\n                supabaseResponse = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n                    request\n                });\n                cookiesToSet.forEach(({ name, value, options })=>supabaseResponse.cookies.set(name, value, options));\n            }\n        }\n    });\n    // IMPORTANT: Avoid writing any logic between createServerClient and\n    // supabase.auth.getUser(). A simple mistake could make it very hard to debug\n    // issues with users being randomly logged out.\n    const { data: { user } } = await supabase.auth.getUser();\n    // Protected routes - require authentication\n    if (request.nextUrl.pathname.startsWith(\"/dashboard\") && !user) {\n        // no user, potentially respond by redirecting the user to the login page\n        const url = request.nextUrl.clone();\n        url.pathname = \"/\";\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(url);\n    }\n    // If user is logged in and tries to access login page, redirect to dashboard\n    if (request.nextUrl.pathname === \"/\" && user) {\n        const url = request.nextUrl.clone();\n        url.pathname = \"/dashboard\";\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(url);\n    }\n    // IMPORTANT: You *must* return the supabaseResponse object as it is. If you're\n    // creating a new response object with NextResponse.next() make sure to:\n    // 1. Pass the request in it, like so:\n    //    const myNewResponse = NextResponse.next({ request })\n    // 2. Copy over the cookies, like so:\n    //    myNewResponse.cookies.setAll(supabaseResponse.cookies.getAll())\n    // 3. Change the myNewResponse object to fit your needs, but avoid changing\n    //    the cookies!\n    // 4. Finally:\n    //    return myNewResponse\n    // If this is not done, you may be causing the browser and server to go out\n    // of sync and terminate the user's session prematurely!\n    return supabaseResponse;\n}\nconst config = {\n    matcher: [\n        /*\n     * Match all request paths except for the ones starting with:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * Feel free to modify this pattern to include more paths.\n     */ \"/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtEO0FBQ1U7QUFFckQsZUFBZUUsV0FBV0MsT0FBb0I7SUFDbkQsSUFBSUMsbUJBQW1CSCxxREFBWUEsQ0FBQ0ksSUFBSSxDQUFDO1FBQ3ZDRjtJQUNGO0lBRUEsTUFBTUcsV0FBV04saUVBQWtCQSxDQUNqQ08sMENBQW9DLEVBQ3BDQSxrTkFBeUMsRUFDekM7UUFDRUksU0FBUztZQUNQQztnQkFDRSxPQUFPVCxRQUFRUSxPQUFPLENBQUNDLE1BQU07WUFDL0I7WUFDQUMsUUFBT0MsWUFBWTtnQkFDakJBLGFBQWFDLE9BQU8sQ0FBQyxDQUFDLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUUsR0FBS2YsUUFBUVEsT0FBTyxDQUFDUSxHQUFHLENBQUNILE1BQU1DO2dCQUM3RWIsbUJBQW1CSCxxREFBWUEsQ0FBQ0ksSUFBSSxDQUFDO29CQUNuQ0Y7Z0JBQ0Y7Z0JBQ0FXLGFBQWFDLE9BQU8sQ0FBQyxDQUFDLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUUsR0FBS2QsaUJBQWlCTyxPQUFPLENBQUNRLEdBQUcsQ0FBQ0gsTUFBTUMsT0FBT0M7WUFDL0Y7UUFDRjtJQUNGO0lBR0Ysb0VBQW9FO0lBQ3BFLDZFQUE2RTtJQUM3RSwrQ0FBK0M7SUFFL0MsTUFBTSxFQUNKRSxNQUFNLEVBQUVDLElBQUksRUFBRSxFQUNmLEdBQUcsTUFBTWYsU0FBU2dCLElBQUksQ0FBQ0MsT0FBTztJQUUvQiw0Q0FBNEM7SUFDNUMsSUFBSXBCLFFBQVFxQixPQUFPLENBQUNDLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLGlCQUFpQixDQUFDTCxNQUFNO1FBQzlELHlFQUF5RTtRQUN6RSxNQUFNTSxNQUFNeEIsUUFBUXFCLE9BQU8sQ0FBQ0ksS0FBSztRQUNqQ0QsSUFBSUYsUUFBUSxHQUFHO1FBQ2YsT0FBT3hCLHFEQUFZQSxDQUFDNEIsUUFBUSxDQUFDRjtJQUMvQjtJQUVBLDZFQUE2RTtJQUM3RSxJQUFJeEIsUUFBUXFCLE9BQU8sQ0FBQ0MsUUFBUSxLQUFLLE9BQU9KLE1BQU07UUFDNUMsTUFBTU0sTUFBTXhCLFFBQVFxQixPQUFPLENBQUNJLEtBQUs7UUFDakNELElBQUlGLFFBQVEsR0FBRztRQUNmLE9BQU94QixxREFBWUEsQ0FBQzRCLFFBQVEsQ0FBQ0Y7SUFDL0I7SUFFQSwrRUFBK0U7SUFDL0Usd0VBQXdFO0lBQ3hFLHNDQUFzQztJQUN0QywwREFBMEQ7SUFDMUQscUNBQXFDO0lBQ3JDLHFFQUFxRTtJQUNyRSwyRUFBMkU7SUFDM0Usa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCwwQkFBMEI7SUFDMUIsMkVBQTJFO0lBQzNFLHdEQUF3RDtJQUV4RCxPQUFPdkI7QUFDVDtBQUVPLE1BQU0wQixTQUFTO0lBQ3BCQyxTQUFTO1FBQ1A7Ozs7OztLQU1DLEdBQ0Q7S0FDRDtBQUNILEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbWlkZGxld2FyZS50cz80MjJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlcnZlckNsaWVudCB9IGZyb20gXCJAc3VwYWJhc2Uvc3NyXCJcbmltcG9ydCB7IE5leHRSZXNwb25zZSwgdHlwZSBOZXh0UmVxdWVzdCB9IGZyb20gXCJuZXh0L3NlcnZlclwiXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIGxldCBzdXBhYmFzZVJlc3BvbnNlID0gTmV4dFJlc3BvbnNlLm5leHQoe1xuICAgIHJlcXVlc3QsXG4gIH0pXG5cbiAgY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVTZXJ2ZXJDbGllbnQoXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMISxcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSEsXG4gICAge1xuICAgICAgY29va2llczoge1xuICAgICAgICBnZXRBbGwoKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcXVlc3QuY29va2llcy5nZXRBbGwoKVxuICAgICAgICB9LFxuICAgICAgICBzZXRBbGwoY29va2llc1RvU2V0KSB7XG4gICAgICAgICAgY29va2llc1RvU2V0LmZvckVhY2goKHsgbmFtZSwgdmFsdWUsIG9wdGlvbnMgfSkgPT4gcmVxdWVzdC5jb29raWVzLnNldChuYW1lLCB2YWx1ZSkpXG4gICAgICAgICAgc3VwYWJhc2VSZXNwb25zZSA9IE5leHRSZXNwb25zZS5uZXh0KHtcbiAgICAgICAgICAgIHJlcXVlc3QsXG4gICAgICAgICAgfSlcbiAgICAgICAgICBjb29raWVzVG9TZXQuZm9yRWFjaCgoeyBuYW1lLCB2YWx1ZSwgb3B0aW9ucyB9KSA9PiBzdXBhYmFzZVJlc3BvbnNlLmNvb2tpZXMuc2V0KG5hbWUsIHZhbHVlLCBvcHRpb25zKSlcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgKVxuXG4gIC8vIElNUE9SVEFOVDogQXZvaWQgd3JpdGluZyBhbnkgbG9naWMgYmV0d2VlbiBjcmVhdGVTZXJ2ZXJDbGllbnQgYW5kXG4gIC8vIHN1cGFiYXNlLmF1dGguZ2V0VXNlcigpLiBBIHNpbXBsZSBtaXN0YWtlIGNvdWxkIG1ha2UgaXQgdmVyeSBoYXJkIHRvIGRlYnVnXG4gIC8vIGlzc3VlcyB3aXRoIHVzZXJzIGJlaW5nIHJhbmRvbWx5IGxvZ2dlZCBvdXQuXG5cbiAgY29uc3Qge1xuICAgIGRhdGE6IHsgdXNlciB9LFxuICB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRVc2VyKClcblxuICAvLyBQcm90ZWN0ZWQgcm91dGVzIC0gcmVxdWlyZSBhdXRoZW50aWNhdGlvblxuICBpZiAocmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvZGFzaGJvYXJkXCIpICYmICF1c2VyKSB7XG4gICAgLy8gbm8gdXNlciwgcG90ZW50aWFsbHkgcmVzcG9uZCBieSByZWRpcmVjdGluZyB0aGUgdXNlciB0byB0aGUgbG9naW4gcGFnZVxuICAgIGNvbnN0IHVybCA9IHJlcXVlc3QubmV4dFVybC5jbG9uZSgpXG4gICAgdXJsLnBhdGhuYW1lID0gXCIvXCJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHVybClcbiAgfVxuXG4gIC8vIElmIHVzZXIgaXMgbG9nZ2VkIGluIGFuZCB0cmllcyB0byBhY2Nlc3MgbG9naW4gcGFnZSwgcmVkaXJlY3QgdG8gZGFzaGJvYXJkXG4gIGlmIChyZXF1ZXN0Lm5leHRVcmwucGF0aG5hbWUgPT09IFwiL1wiICYmIHVzZXIpIHtcbiAgICBjb25zdCB1cmwgPSByZXF1ZXN0Lm5leHRVcmwuY2xvbmUoKVxuICAgIHVybC5wYXRobmFtZSA9IFwiL2Rhc2hib2FyZFwiXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpXG4gIH1cblxuICAvLyBJTVBPUlRBTlQ6IFlvdSAqbXVzdCogcmV0dXJuIHRoZSBzdXBhYmFzZVJlc3BvbnNlIG9iamVjdCBhcyBpdCBpcy4gSWYgeW91J3JlXG4gIC8vIGNyZWF0aW5nIGEgbmV3IHJlc3BvbnNlIG9iamVjdCB3aXRoIE5leHRSZXNwb25zZS5uZXh0KCkgbWFrZSBzdXJlIHRvOlxuICAvLyAxLiBQYXNzIHRoZSByZXF1ZXN0IGluIGl0LCBsaWtlIHNvOlxuICAvLyAgICBjb25zdCBteU5ld1Jlc3BvbnNlID0gTmV4dFJlc3BvbnNlLm5leHQoeyByZXF1ZXN0IH0pXG4gIC8vIDIuIENvcHkgb3ZlciB0aGUgY29va2llcywgbGlrZSBzbzpcbiAgLy8gICAgbXlOZXdSZXNwb25zZS5jb29raWVzLnNldEFsbChzdXBhYmFzZVJlc3BvbnNlLmNvb2tpZXMuZ2V0QWxsKCkpXG4gIC8vIDMuIENoYW5nZSB0aGUgbXlOZXdSZXNwb25zZSBvYmplY3QgdG8gZml0IHlvdXIgbmVlZHMsIGJ1dCBhdm9pZCBjaGFuZ2luZ1xuICAvLyAgICB0aGUgY29va2llcyFcbiAgLy8gNC4gRmluYWxseTpcbiAgLy8gICAgcmV0dXJuIG15TmV3UmVzcG9uc2VcbiAgLy8gSWYgdGhpcyBpcyBub3QgZG9uZSwgeW91IG1heSBiZSBjYXVzaW5nIHRoZSBicm93c2VyIGFuZCBzZXJ2ZXIgdG8gZ28gb3V0XG4gIC8vIG9mIHN5bmMgYW5kIHRlcm1pbmF0ZSB0aGUgdXNlcidzIHNlc3Npb24gcHJlbWF0dXJlbHkhXG5cbiAgcmV0dXJuIHN1cGFiYXNlUmVzcG9uc2Vcbn1cblxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbiAgbWF0Y2hlcjogW1xuICAgIC8qXG4gICAgICogTWF0Y2ggYWxsIHJlcXVlc3QgcGF0aHMgZXhjZXB0IGZvciB0aGUgb25lcyBzdGFydGluZyB3aXRoOlxuICAgICAqIC0gX25leHQvc3RhdGljIChzdGF0aWMgZmlsZXMpXG4gICAgICogLSBfbmV4dC9pbWFnZSAoaW1hZ2Ugb3B0aW1pemF0aW9uIGZpbGVzKVxuICAgICAqIC0gZmF2aWNvbi5pY28gKGZhdmljb24gZmlsZSlcbiAgICAgKiBGZWVsIGZyZWUgdG8gbW9kaWZ5IHRoaXMgcGF0dGVybiB0byBpbmNsdWRlIG1vcmUgcGF0aHMuXG4gICAgICovXG4gICAgXCIvKCg/IV9uZXh0L3N0YXRpY3xfbmV4dC9pbWFnZXxmYXZpY29uLmljb3wuKlxcXFwuKD86c3ZnfHBuZ3xqcGd8anBlZ3xnaWZ8d2VicCkkKS4qKVwiLFxuICBdLFxufVxuIl0sIm5hbWVzIjpbImNyZWF0ZVNlcnZlckNsaWVudCIsIk5leHRSZXNwb25zZSIsIm1pZGRsZXdhcmUiLCJyZXF1ZXN0Iiwic3VwYWJhc2VSZXNwb25zZSIsIm5leHQiLCJzdXBhYmFzZSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsImNvb2tpZXMiLCJnZXRBbGwiLCJzZXRBbGwiLCJjb29raWVzVG9TZXQiLCJmb3JFYWNoIiwibmFtZSIsInZhbHVlIiwib3B0aW9ucyIsInNldCIsImRhdGEiLCJ1c2VyIiwiYXV0aCIsImdldFVzZXIiLCJuZXh0VXJsIiwicGF0aG5hbWUiLCJzdGFydHNXaXRoIiwidXJsIiwiY2xvbmUiLCJyZWRpcmVjdCIsImNvbmZpZyIsIm1hdGNoZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});